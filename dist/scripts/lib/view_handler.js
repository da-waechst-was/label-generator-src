(function(){var e,t=function(e,t){return function(){return e.apply(t,arguments)}};e=function(){function e(e){this.container=e,this.render=t(this.render,this),this.updateIframeContent=t(this.updateIframeContent,this),this.setupForm=t(this.setupForm,this),this.setupColorChooser=t(this.setupColorChooser,this),this.updateKgas=t(this.updateKgas,this),this.setupUnionChooser=t(this.setupUnionChooser,this),this.background=$(".label-background",this.container),this.name=$(".name",this.container),this.from=$(".from",this.container),this.date=$(".date",this.container),this.freeLine=$(".free-line",this.container),this.setupForm(),this.setupColorChooser(),this.setupUnionChooser(),this.render()}return e.prototype.setupUnionChooser=function(){var e,t,n,r,o,i,s;r=Config.unions;for(s in r)i=r[s],$("#select-union").append("<option value='"+s+"'>"+s+"</option>");for(o=Config.unions["Bezirksverband Prenzlauer Berg"],e=0,n=o.length;e<n;e++)t=o[e],$("#select-kga").append("<option value='"+t+"'>"+t+"</option>");return $($("#select-kga").find("option").get(1)).attr("selected","selected")},e.prototype.updateKgas=function(){var e,t,n,r,o;for($("#select-kga").find("option").remove(),e=$("#select-union").val(),o=Config.unions[e],t=0,r=o.length;t<r;t++)n=o[t],$("#select-kga").append("<option value='"+n+"'>"+n+"</option>");return $($("#select-kga").find("option").get(1)).attr("selected","selected"),this.render()},e.prototype.setupColorChooser=function(){var e,t,n,r;for(r=Config.colors,t=0,n=r.length;t<n;t++)e=r[t],$(".color-chooser").append("<li class='"+e+"' data-color='"+e+"'></li> ");return $(".color-chooser li").click(function(t){return function(n){return e=$(n.currentTarget).data("color"),t.background.prop("src","images/labels/"+e+".jpg"),t.container.removeClass(Config.colors.join(" ")).addClass(e)}}(this))},e.prototype.setupForm=function(){var e,t,n,r,o;for(e=(new Date).getFullYear(),r=[e,e-1,e-2,e-3],t=0,n=r.length;t<n;t++)o=r[t],$("#select-year").append($("<option>",{value:o,text:o}));return $("#input-name").keyup(this.render),$("#input-parcel").keyup(this.render),$("#input-parcel").change(this.render),$("#input-free-text").keyup(this.render),$("#select-kga").change(this.render),$("#select-union").change(this.updateKgas),$("#select-month").change(this.render),$("#select-year").change(this.render),$("#button-print").click(function(e){return function(){var t,n;return n=window.frames.printIframe,t=e.container.parent().html(),n.document.body.innerHTML=t+t+t+t+t+t+t+t+t+t,setTimeout(function(){return window.frames.printIframe.window.print()},200)}}(this))},e.prototype.updateIframeContent=function(){var e,t;if(t=window.frames.printIframe)return e=this.container.parent().html(),t.document.body.innerHTML=e+e+e+e+e+e+e+e+e+e},e.prototype.render=function(){var e,t,n,r,o;return this.name.text($("#input-name").val()),e="vom "+$("#select-month").val()+" "+$("#select-year").val(),this.date.text(e),r=$("#input-parcel").val(),n=$("#select-kga").val(),o=$("#select-union").val(),r||n?(t="<div class='union'>Aus dem "+o+"</div>",r&&(r="Parzelle "+r),t+=[r,n].filter(function(e){return e}).join(" - ")):t="<div class='union single'>Aus dem "+o+"</div>",this.from.html(t),this.freeLine.text($("#input-free-text").val()),this.updateIframeContent()},e}()}).call(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
