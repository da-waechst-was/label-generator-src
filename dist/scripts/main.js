(function(){!function(){var e,t,n,r,a,c,l,i,p,s,u,o;for($.fn.extend({print:function(){var e,t,n,r;return t="printIframe",e=window.frames[t],e||($("<iframe>").hide().attr("name",t).appendTo(document.body),e=window.frames[t],n=e.document.head,r=e.document.createElement("link"),r.type="text/css",r.rel="stylesheet",r.href="styles/main.css",n.appendChild(r)),e.document.body.innerHTML=this.parent().html(),e.window.print(),this}}),e=$(".preview-screen"),a=$(".label-background",e),c=$(".name",e),r=$(".from",e),t=$(".date",e),n=$(".free-line",e),$(".color-chooser li").click(function(t){var n;return n="images/labels/"+t.currentTarget.className+".jpg",a.prop("src",n),e.get(0).className="preview-screen "+t.currentTarget.className}),u=function(){var e,t,a;return c.text($("#input-name").val()),e="Vom "+$("#select-month").val()+" "+$("#select-year").val(),a="Parzelle "+$("#input-parcel").val(),t=$("#select-kga").val(),r.text(e+" | "+a+" | "+t),n.text($("#input-free-text").val())},l=(new Date).getFullYear(),s=[l,l-1,l-2,l-3],i=0,p=s.length;i<p;i++)o=s[i],$("#select-year").append($("<option>",{value:o,text:o}));return $("#button-print").click(function(){return e.print()}),$("#input-name").keyup(u),$("#input-parcel").keyup(u),$("#input-parcel").change(u),$("#input-free-text").keyup(u),$("#select-kga").change(u),$("#select-month").change(u),$("#select-year").change(u),u()}()}).call(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
